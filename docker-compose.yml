version: '3.2'
services:
  traefik:
    image: traefik:v2.4
    ports:
      # The HTTP port
      - "8080:80"
      # The Web UI (enabled by `api.insecure: true`)
      - "8081:8080"
    volumes:
      # Access to Docker API
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik.yml:/etc/traefik/traefik.yml

  mysql:
    image: mysql:8.0.23
    restart: always
    container_name: mysql
    security_opt:
      - seccomp:unconfined
    expose:
      - "3306"
    environment:
      MYSQL_DATABASE: ${mysql_db}
      MYSQL_USER: ${mysql_user}
      MYSQL_PASSWORD: ${mysql_pw}
      MYSQL_ROOT_PASSWORD: ${mysql_root_pw}
    volumes:
      - ./.init:/docker-entrypoint-initdb.d
  
  backupdb:
    build: ./dbBackup/
    container_name: backup
    depends_on:
      - mysql
    restart: on-failure
    environment:
      - S3_ACCESS_KEY_ID=${id}
      - S3_SECRET_ACCESS_KEY=${secret}
      - S3_BUCKET=actionit-staging
      - S3_PREFIX=backup
      - MYSQL_USER=root
      - MYSQL_PASSWORD=${mysql_root_pw}
      - MYSQL_HOST=mysql
      # daily
      - SCHEDULE=0 0 0 * * *
      # - SCHEDULE=3 * * * *
    
    labels:
      # Disable traefik in mysql
      - "traefik.enable=false"

  wordpress:
    depends_on:
      - mysql
    image: wordpress:5.7.1-php7.4-apache
    # build:
    #   context: ./
    container_name: wordpress
    restart: always
    expose: 
      - "80"
    environment:
      WORDPRESS_DB_HOST: mysql
      WORDPRESS_DB_USER: ${mysql_user}
      WORDPRESS_DB_PASSWORD: ${mysql_pw}
      WORDPRESS_DB_NAME: ${mysql_db}
      WORDPRESS_TABLE_PREFIX: wp_
      # WAIT_HOSTS: mysql:3306
    labels:
      - "traefik.http.routers.wordpress-apache.rule=Method(`GET`, `POST`, `PUT`, `DELETE`, `PATCH`, `HEAD`)"
    volumes:
      - ./wp-content:/var/www/html/wp-content
